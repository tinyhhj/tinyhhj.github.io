{"componentChunkName":"component---src-templates-blog-post-js","path":"/algospot-picnic/","result":{"data":{"site":{"siteMetadata":{"title":"Gatsby Starter Blog"}},"markdownRemark":{"id":"e54085ac-1ffe-5fd0-8ead-7dd2cfff103b","excerpt":"PICNIC 재귀호출","html":"<h1><a href=\"https://algospot.com/judge/problem/read/PICNIC\">PICNIC</a></h1>\n<h2>재귀호출</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">package algospot.picnic;\n\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.FileNotFoundException;\nimport java.util.*;\nimport java.util.stream.IntStream;\nimport java.util.stream.Stream;\n\npublic class Main {\n\n    public static void main(String[] args) throws FileNotFoundException {\n\n//        Scanner sc = new Scanner(new FileInputStream(&quot;algospot/picnic/test.txt&quot;));\n        Scanner sc=  new Scanner(System.in);\n        int tc = sc.nextInt();\n        for( int i = 0; i &lt; tc ; i++ ) {\n            int total = sc.nextInt();\n            int friend = sc.nextInt();\n            int[][] friends = new int[10][10];\n            for(int j = 0 ; j &lt; friend ; j++) {\n                int a = sc.nextInt();\n                int b = sc.nextInt();\n                friends[a][b] = 1;\n                friends[b][a] = 1;\n            }\n            System.out.println(getFriendNumber(new int[total], friends, total));\n\n        }\n    }\n\n    // 친구 목록이 주어졌을 때의 친구들끼리 짝을 맺을 수 있는 경우의 수\n    static int getFriendNumber(int[] children, int[][] friends, int remain) {\n        // 짝이 다 맞으면 경우의 수 1 추가\n        if( remain == 0 ) {\n            return 1;\n        }\n        final int[] res = {0};\n        // 가장 첫번째부터 짝을 맺어준다\n        int first=IntStream.range(0,children.length)\n                .filter(i-&gt;children[i] == 0)\n                .findFirst().getAsInt();\n        IntStream.range(first,children.length)\n                .filter(j-&gt;friends[first][j] == 1 &amp;&amp; children[j] == 0)\n                .forEach(j-&gt;{\n                    children[first]=1;\n                    children[j]=1;\n\n                    res[0] +=getFriendNumber(children,friends,remain-2);\n                    children[first]=0;\n                    children[j]=0;\n\n\n                });\n\n        return res[0];\n    }\n\n}</code></pre></div>","frontmatter":{"title":"[algospot]picnic","date":"January 03, 2020","description":"algorithm"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/algospot-picnic/","previous":{"fields":{"slug":"/boj-1914/"},"frontmatter":{"title":"[boj]1914"}},"next":{"fields":{"slug":"/algospot-boardcover/"},"frontmatter":{"title":"[algospot]boardcover"}}}}}