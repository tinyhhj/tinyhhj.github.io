{"componentChunkName":"component---src-templates-blog-post-js","path":"/boj-1914/","result":{"data":{"site":{"siteMetadata":{"title":"tinyhhj Blog"}},"markdownRemark":{"id":"9fa6b261-1d82-5bcc-8b1c-f36e1a2d5c19","excerpt":"하노이 탑 재귀호출","html":"<h1><a href=\"https://www.acmicpc.net/problem/1914\">하노이 탑</a></h1>\n<h2>재귀호출</h2>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Boj1914</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">int</span> res<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">Scanner</span> sc <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> sc<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">BigInteger</span> res <span class=\"token operator\">=</span> <span class=\"token class-name\">BigInteger</span><span class=\"token punctuation\">.</span><span class=\"token function\">valueOf</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">pow</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">subtract</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BigInteger</span><span class=\"token punctuation\">.</span>ONE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> n <span class=\"token operator\">&lt;=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token function\">hanoi</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// 문제의 조각 n개의 조각을 1->3으로 옮기는 문제</span>\n    <span class=\"token comment\">// 처음 시작하는 판의 갯수 n의 크기에 따라 재귀함수의 크기가 달라진다.</span>\n    <span class=\"token comment\">// n = 1 1->3 단순히 옮기면 됨</span>\n    <span class=\"token comment\">// n = 2 1->2, 1->3 , 2->3</span>\n    <span class=\"token comment\">// n = 3 1->3, 1->2, 3->2, 1->3, 2->1, 2->3, 1->3</span>\n    <span class=\"token comment\">// n = 4 1->2, 1->3, 2->3, 1->2, 3->1, 3->2, 1->2, 1->3, 2->3, 2->1, 3->1, 2->3, 1->2, 1->3, 2->3</span>\n    <span class=\"token comment\">// n = k 일때 추상적 흐름</span>\n    <span class=\"token comment\">// k-1개의 원반을 목적지 이외의 기둥에 옮겨놓는다.(구체적으로는 모름)</span>\n    <span class=\"token comment\">// k 번째 원반을 목적지에 옮겨놓음</span>\n    <span class=\"token comment\">// k-1개의 원반을 다시 목적지로 옮긴다.( 구체적으로는 모름)</span>\n    <span class=\"token comment\">// 문제의 조각: n(원판의 갯수), st(시작점), end(목표), 순서기록여부 리턴: 횟수</span>\n    <span class=\"token comment\">// 기저조건: n = 1 인경우 그냥 옮기면 됨</span>\n    <span class=\"token comment\">// 문제의 조각 내에 순서를 리턴하게 되면 안됨. 20 이하일때만 리턴하도록 되있기 때문에</span>\n    <span class=\"token comment\">// 시간 초과가 나므로 캐시를 사용해야하는데 n, st,end에 대해서 순서도를 캐시할거임</span>\n    <span class=\"token comment\">// 1. 맥스값 오류 - long을 벗어남</span>\n    <span class=\"token comment\">// 2. 메모리 오버 - 여러 풀이들을 보니 그냥 2^n-1 최소횟수를 리턴하도록 되있음</span>\n\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">long</span> <span class=\"token function\">hanoi</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> n <span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> st<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> end <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> n <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token operator\">+</span>st <span class=\"token operator\">+</span><span class=\"token string\">\" \"</span> <span class=\"token operator\">+</span> end<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//            wrapper.add(new int[]{st,end});</span>\n            <span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">long</span> cnt1 <span class=\"token operator\">=</span> <span class=\"token function\">hanoi</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> st<span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token operator\">-</span>st<span class=\"token operator\">-</span>end<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">long</span> cnt2 <span class=\"token operator\">=</span> <span class=\"token function\">hanoi</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>st<span class=\"token punctuation\">,</span>end<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">long</span> cnt3 <span class=\"token operator\">=</span> <span class=\"token function\">hanoi</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token operator\">-</span>st<span class=\"token operator\">-</span>end<span class=\"token punctuation\">,</span>end<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> cnt1<span class=\"token operator\">+</span>cnt2<span class=\"token operator\">+</span>cnt3<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"title":"[boj]1914","date":"January 03, 2020","description":"algorithm"}},"previous":{"fields":{"slug":"/algospot-boggle/"},"frontmatter":{"title":"[algospot]boggle"}},"next":{"fields":{"slug":"/algospot-picnic/"},"frontmatter":{"title":"[algospot]picnic"}}},"pageContext":{"id":"9fa6b261-1d82-5bcc-8b1c-f36e1a2d5c19","previousPostId":"aa49dc35-ead4-531f-9b59-4e7a2ff8ee2d","nextPostId":"a60ea87d-b42b-5801-a8bc-8fade804e022"}},"staticQueryHashes":["2841359383"]}