{"componentChunkName":"component---src-templates-blog-post-js","path":"/spring7/","result":{"data":{"site":{"id":"Site","siteMetadata":{"title":"tinyhhj Blog"}},"markdownRemark":{"id":"14444f70-f86f-586f-9e94-d04e06a6ed28","excerpt":"스프링 기술 응용 SQL 분리 기존의 Dao를 인터페이스로 구현하여 데이터 액세스 기술에 독립적으로 변경할 수 있게 되었다. 그러나 테이블의 정보를 담고있는 sql이 변경된다면,\ndao의 변경은 sql에 독립적인 dao를 만들기 위해서 sql을 분리시켜보자. sql…","html":"<h1>스프링 기술 응용</h1>\n<h2>SQL 분리</h2>\n<p>기존의 Dao를 인터페이스로 구현하여 데이터 액세스 기술에 독립적으로 변경할 수 있게 되었다. 그러나 테이블의 정보를 담고있는 sql이 변경된다면,\ndao의 변경은 sql에 독립적인 dao를 만들기 위해서 sql을 분리시켜보자. sql을 분리시키기 위해서는 변하는 작업과 변하지 않는 작업을 구분한다.\n변하는 작업은 기존 dao의 데이터 액세스 로직이고, 변하는 로직은 sql이다. 즉 변하는 부분을 스프링 컨테이너를 통해서 DI받도록 수정해본다. </p>\n<p>문제점: dao가 sql에 의존적이기 때문에 sql이 변경될 시(생각보다 잦음), dao를 함께 수정해줘야 함\n해결: sql을 DI받는다. </p>\n<p>문제점: sql이 새로 추가될때마다, 새로운 프로퍼티 추가 및 수정메소드를 만드는 변경이 뒤 따른다.\n해결: sql을 콜렉션 형태로 DI받는다.</p>\n<p>문제점: sql과 DI 설정정보가 섞여있으면 관리하기에 좋지 않을뿐더러, sql을 꼭 빈 설정정보에(xml)뿐 아니라, 별도의 파일이나, db, 원격서버에서 sql을 읽어올 수 있도록 확장이 불가능하다. 또한 스프링 설정파일로부터 주입받는 정보들은 어플리케이션을 다시 시작하기 전까지는 변경이 어렵다.\n해결: sql을 제공받을 수 있는 기능을 확장이 용이하도록, dao에 sql을 제공해주는 기능을 독립 시킨다.</p>\n<blockquote>\n<p>sql 제공 인터페이스 input: sql key / output: sql\nß</p>\n</blockquote>","frontmatter":{"title":"Spring Chap. 7","date":"January 12, 2020","description":"Toby Spring"}}},"pageContext":{"slug":"/spring7/","previous":{"fields":{"slug":"/gcj2019-qr2/"},"frontmatter":{"title":"[gcj2019-qr2]Foregone Solution"}},"next":{"fields":{"slug":"/gcj2019-qr3/"},"frontmatter":{"title":"[gcj2019-qr3]Cryptopangrams"}}}}}