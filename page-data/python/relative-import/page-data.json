{"componentChunkName":"component---src-templates-blog-post-js","path":"/python/relative-import/","result":{"data":{"site":{"siteMetadata":{"title":"tinyhhj Blog"}},"markdownRemark":{"id":"94ce7b96-f9bd-5cc3-a64a-dd4fff1a727e","excerpt":"relative import reference stackoverflow","html":"<h2><a href=\"https://github.com/tinyhhj/algorithm/tree/master/src/python/relative_import\">relative import</a></h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'__name__'</span><span class=\"token punctuation\">,</span>__name__<span class=\"token punctuation\">,</span><span class=\"token string\">'__package__'</span><span class=\"token punctuation\">,</span>__package__<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># https://stackoverflow.com/questions/14132789/relative-imports-for-the-billionth-time/14132912#14132912</span>\n<span class=\"token comment\"># script vs module</span>\n\n<span class=\"token comment\"># 파이썬은 파일을 로드할때 두가지 방법으로 로드할 수 있다. \"스크립트 혹은 모듈\"</span>\n<span class=\"token comment\"># 스크립트는 cli에서 \"python script.py\"라고 실행시킬 때 첫 진입점이 되는 파일이자 top-level script로 단 하나만 존재한다.</span>\n<span class=\"token comment\"># 모듈의 경우 다른 모듈에 의해 import 되거나, python -m 옵션으로 로딩이 가능하다.</span>\n<span class=\"token comment\"># 네이밍</span>\n<span class=\"token comment\"># 모듈을 로딩할때 모듈의 이름과 패키지 정보를 각각 __name__과 __package__에 담는다.</span>\n<span class=\"token comment\"># top-level script의 경우 name은 __main__, package는 None</span>\n<span class=\"token comment\"># 모듈의 경우 name은 모듈명은 파일명, package는 해당 모듈의 패키지명이 된다. (A 의경우 package_A 단, cli에서 직접 A를</span>\n<span class=\"token comment\"># 호출한다면 top-level-script가 되므로 name은 __main__, package는 None이 된다.)</span>\n<span class=\"token comment\"># 즉 프로그램 진입점이 되는 top-level-script가 top-level-package가 되는것이고, 모듈명에 .(dot)이 없다면 패키지의 일부인것이다.</span>\n\n<span class=\"token comment\"># relative import</span>\n<span class=\"token comment\"># relative package는 모듈의 __name__과 __package__의 정보를 기반으로 상대경로를 찾는다</span>\n<span class=\"token comment\"># 즉, top-level-script이거나 top-level-script와 같은 패키지를 공유하는 모듈인 경우 상대경로 임포팅이 되지 않는것이다.</span>\n<span class=\"token comment\"># (사실 생각해보면 top-level-package를 임포팅하기 위해서는 절대경로 임포팅을 사용하면 된다</span>\n<span class=\"token keyword\">import</span> importlib\n<span class=\"token keyword\">def</span> <span class=\"token function\">setname</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">import</span> warnings\n    <span class=\"token keyword\">def</span> <span class=\"token function\">pprint</span><span class=\"token punctuation\">(</span>module<span class=\"token punctuation\">,</span>package<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n            importlib<span class=\"token punctuation\">.</span>import_module<span class=\"token punctuation\">(</span>module<span class=\"token punctuation\">,</span>package<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span>\n            warnings<span class=\"token punctuation\">.</span>warn<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"from </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>package<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span> <span class=\"token keyword\">if</span> package <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">None</span> <span class=\"token keyword\">else</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">}</span></span><span class=\"token string\"> import module </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>module<span class=\"token punctuation\">}</span></span><span class=\"token string\"> can`t import from </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">}</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> pprint\n\n\nmsg <span class=\"token operator\">=</span>setname<span class=\"token punctuation\">(</span>__name__<span class=\"token punctuation\">)</span>\nmsg<span class=\"token punctuation\">(</span><span class=\"token string\">'D'</span><span class=\"token punctuation\">)</span>\nmsg<span class=\"token punctuation\">(</span><span class=\"token string\">'.D'</span><span class=\"token punctuation\">)</span>\nmsg<span class=\"token punctuation\">(</span><span class=\"token string\">'package_A.A'</span><span class=\"token punctuation\">)</span>\nmsg<span class=\"token punctuation\">(</span><span class=\"token string\">'package_B.B'</span><span class=\"token punctuation\">)</span>\nmsg<span class=\"token punctuation\">(</span><span class=\"token string\">'package_A.package_AA.AA'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3>reference</h3>\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/14132789/relative-imports-for-the-billionth-time/14132912#14132912\">stackoverflow</a></li>\n</ul>","frontmatter":{"title":"[python]relative-import","date":"March 19, 2020","description":"language"}},"previous":{"fields":{"slug":"/deep-learning/blank-review/simple-classifier/"},"frontmatter":{"title":"[deeplearning]simple-classifier"}},"next":{"fields":{"slug":"/linux/ssh-rsa/"},"frontmatter":{"title":"[linux]ssh-rsa"}}},"pageContext":{"id":"94ce7b96-f9bd-5cc3-a64a-dd4fff1a727e","previousPostId":"38e352a3-dcfe-55d4-bdd7-c0d27e03fc8c","nextPostId":"4817b9f2-32e9-5914-a8ff-55efec2dc659"}},"staticQueryHashes":["2841359383"]}