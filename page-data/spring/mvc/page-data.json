{"componentChunkName":"component---src-templates-blog-post-js","path":"/spring/mvc/","result":{"data":{"site":{"siteMetadata":{"title":"tinyhhj Blog"}},"markdownRemark":{"id":"268c194b-8eeb-5859-a643-d5ca888a425b","excerpt":"TIL 21-04-18 @SpringBootApplication @EnableAutoConfiguration: 클래스패스의 의존성을 확인하여, 자동으로 필요한 설정들을 세팅해줌( @EnableWebMvc도 포함, starter-web을 사용한다면..)\\ @EnableWebMvc…","html":"<h2>[TIL] 21-04-18</h2>\n<h3>@SpringBootApplication</h3>\n<p>@EnableAutoConfiguration: 클래스패스의 의존성을 확인하여, 자동으로 필요한 설정들을 세팅해줌( @EnableWebMvc도 포함, starter-web을 사용한다면..)\\</p>\n<h3>@EnableWebMvc</h3>\n<p>웹 어플리케이션에 필요한 default HandlerMapping이나 HandlerAdapter같은 기타 mvc에 필요한 bean들을 등록해주는 어노테이션이다.\ncustomize를 하고싶은 경우에는 WebMvcConfigurer를 구현해서 사용해야한다.</p>\n<h3>406에러</h3>\n<p>JacksonMessageConverter가 제대로 세팅되어있지만 406 에러가 난다면, 리턴 클래스의 getter/setter를 확인해보길.. (시간을 얼마나 소모한건지)</p>\n<h3>UserDeatilsService</h3>\n<p>기본적인 spring-security의 인증 흐름에서 유저를 id로 검색하는 부분이 있는데 AuthenticationManagerBuilder와 함께 UserDetailsService를 설정해주면 된다.</p>\n<h3>vm2</h3>\n<p>일반적으로 내 시스템에서 안전하지 않은 코드를 실행시키려면 javascript의 경우에 vm2를 사용하면 된다.</p>\n<h2>Reference</h2>\n<ul>\n<li><a href=\"https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/\">springboot reference doc</a></li>\n<li><a href=\"https://zzang9ha.tistory.com/320?category=954141\">406error</a></li>\n</ul>","frontmatter":{"title":"[springboot] mvc","date":"April 18, 2021","description":"java"}},"previous":{"fields":{"slug":"/books/cleancode/2장/"},"frontmatter":{"title":"[cleancode]2장 의미있는 이름"}},"next":{"fields":{"slug":"/fe/stacking-context/"},"frontmatter":{"title":"[css]stacking-context"}}},"pageContext":{"id":"268c194b-8eeb-5859-a643-d5ca888a425b","previousPostId":"aaa9ac8e-1524-53bf-9952-54be6dc9d70f","nextPostId":"ca22e2e9-01f4-5f4b-aa29-7b982e7a26ac"}},"staticQueryHashes":["2841359383"]}