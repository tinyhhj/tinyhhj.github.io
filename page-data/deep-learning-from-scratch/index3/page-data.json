{"componentChunkName":"component---src-templates-blog-post-js","path":"/deep-learning-from-scratch/index3/","result":{"data":{"site":{"siteMetadata":{"title":"tinyhhj Blog"}},"markdownRemark":{"id":"e7752ba2-015e-53db-9639-182cd9ec4080","excerpt":"deep-learning-from-scratch chap 3","html":"<h2><a href=\"https://github.com/WegraLee/deep-learning-from-scratch\">deep-learning-from-scratch</a></h2>\n<h3>chap 3</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token triple-quoted-string string\">'''\n신경망\n데이터로부터 가중치 매개변수의 적절한 값을 자동으로 학습하는 능력이 신경망의 중요한 성질입니다.\n신경망의 구조\n0.입력층\n1.은닉층\n2.출력층\n\n퍼셉트론의 편향은 입력이 1이고 가중치가 b일 경우의 가중치로 변경이 가능합니다.\na = b(=w0)*x0 +w1*x1 + .. + wn*xn 으로 표현이 가능합니다.\ny = h(a)\n여기서 h(a)는 활성화 함수라고 하는데 입력의 총합(a)이 활성화(y)를 일으키는지 정하는 역할을 합니다.\n\n퍼셉트론의 경우에 활성화 함수로 계단 함수를 사용하고 있으나 신경망으로 세계에서는 활성화 함수로 다른 함수를 사용하고 있습니다.\n\n시그모이드 함수\n\n'''</span>\n\n<span class=\"token comment\"># 계단 함수</span>\n<span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n<span class=\"token keyword\">import</span> matplotlib<span class=\"token punctuation\">.</span>pylab <span class=\"token keyword\">as</span> plt\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">step_func</span><span class=\"token punctuation\">(</span>x1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span> x1 <span class=\"token operator\">></span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> dtype<span class=\"token operator\">=</span>np<span class=\"token punctuation\">.</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span>\n\nx <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">5</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span>\ny <span class=\"token operator\">=</span> step_func<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>ylim<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.1</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 범위</span>\nplt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># sigmoid</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">sigmoid</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># broadcast 이용</span>\n    <span class=\"token comment\"># scalar 와 np.array 연산 시 해당 크기만큼 scalar값이 확장되어 연산을 수행합니다.</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">1</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">+</span> np<span class=\"token punctuation\">.</span>exp<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nxx <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">5</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span>\nyy <span class=\"token operator\">=</span> sigmoid<span class=\"token punctuation\">(</span>xx<span class=\"token punctuation\">)</span>\n\nplt<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>xx<span class=\"token punctuation\">,</span>yy<span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>ylim<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1.1</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># ReLU(Rectified Linear Unit)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">relu</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> np<span class=\"token punctuation\">.</span>maximum<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>x<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 다차원 배열</span>\nA <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>ndim<span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 차원</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 차원의 크기</span>\n\nB <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>dot<span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">,</span>B<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 행렬의 곱 np.dot</span>\n\nC <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>C<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 신경망 행렬 곱</span>\n<span class=\"token comment\"># x * w = y</span>\n\nX <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span>\nW <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\nY <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>dot<span class=\"token punctuation\">(</span>X<span class=\"token punctuation\">,</span>W<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>Y<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 핵심은 신경망에서의 계산을 행렬 계산으로 정리할 수 있다는 것입니다.</span>\n<span class=\"token comment\"># 0층 입력층</span>\n<span class=\"token comment\"># 1층 은닉층</span>\n<span class=\"token comment\"># 2층 은닉층</span>\n<span class=\"token comment\"># 3층 출력층</span>\nX <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nW1 <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0.3</span><span class=\"token punctuation\">,</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token number\">0.2</span><span class=\"token punctuation\">,</span><span class=\"token number\">0.4</span><span class=\"token punctuation\">,</span><span class=\"token number\">0.6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nB1 <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0.2</span><span class=\"token punctuation\">,</span><span class=\"token number\">0.3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>W1<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>X<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>B1<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 0->1층</span>\nA1 <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>dot<span class=\"token punctuation\">(</span>X<span class=\"token punctuation\">,</span>W1<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>B1\nZ1 <span class=\"token operator\">=</span> sigmoid<span class=\"token punctuation\">(</span>A1<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>A1<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>Z1<span class=\"token punctuation\">)</span>\n\nW2 <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0.4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token number\">0.2</span><span class=\"token punctuation\">,</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token number\">0.3</span><span class=\"token punctuation\">,</span><span class=\"token number\">0.6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nB2 <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0.2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>Z1<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>W2<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>B2<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 1->2층</span>\nA2 <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>dot<span class=\"token punctuation\">(</span>Z1<span class=\"token punctuation\">,</span>W2<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> B2\nZ2 <span class=\"token operator\">=</span> sigmoid<span class=\"token punctuation\">(</span>A2<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>A2<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>Z2<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 2->3층</span>\n<span class=\"token comment\"># 나머지 구현은 같으나, 활성화 함수만 다릅니다.</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">identify_func</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> x\n\nW3 <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0.3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token number\">0.2</span><span class=\"token punctuation\">,</span><span class=\"token number\">0.4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nB3 <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0.2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nA3 <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>dot<span class=\"token punctuation\">(</span>Z2<span class=\"token punctuation\">,</span>W3<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>B3\nZ3 <span class=\"token operator\">=</span> identify_func<span class=\"token punctuation\">(</span>A3<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>A3<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>Z3<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 중요: 출력층의 활성화 함수는 문제의 성질에 다르게 정합니다</span>\n<span class=\"token comment\"># 회귀: 항등함수</span>\n<span class=\"token comment\"># 분류: 시그모이드</span>\n<span class=\"token comment\"># 다중분류: 소프트 맥스</span>\n\n<span class=\"token comment\"># 소프트 맥스</span>\n\na <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">0.3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.7</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nexp_a <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>exp<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\nsum_exp_a <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>exp_a<span class=\"token punctuation\">)</span>\ny <span class=\"token operator\">=</span> exp_a <span class=\"token operator\">/</span> sum_exp_a\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># softmax의 결과값의 경우 항상 출력 총합이 1 이므로 출력값을 '확률'로 해석할 수 있습니다.</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">softmax</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># exp는 오버플로우가 발생할 수 있으므로 max값을 빼줍니다.</span>\n    <span class=\"token builtin\">max</span> <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span><span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\n    exp_x <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>exp<span class=\"token punctuation\">(</span>x<span class=\"token operator\">-</span><span class=\"token builtin\">max</span><span class=\"token punctuation\">)</span>\n    <span class=\"token builtin\">sum</span> <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>exp_x<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># print(max, exp_x, sum)</span>\n    <span class=\"token keyword\">return</span> exp_x <span class=\"token operator\">/</span> <span class=\"token builtin\">sum</span>\n\n<span class=\"token comment\"># 기계학습을 학습과 추론 2단계로 나뉩니다</span>\n<span class=\"token comment\"># 학습: 데이터를 사용해서 '가중치 매개변수'를 학습합니다.</span>\n<span class=\"token comment\"># 추론: 앞에서 학습한 '가중치 매개변수'를 사용해서 입력데이터를 분류합니다.</span>\n<span class=\"token keyword\">import</span> sys<span class=\"token punctuation\">,</span> os\nsys<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>pardir<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">from</span> download_mnist <span class=\"token keyword\">import</span> load_mnist\n\n<span class=\"token punctuation\">(</span>x_train<span class=\"token punctuation\">,</span> t_train<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>x_test<span class=\"token punctuation\">,</span>t_test<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> load_mnist<span class=\"token punctuation\">(</span>flatten<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> normalize<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>x_train<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>t_train<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>x_test<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>t_test<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 출력층 뉴런 10개 -> 다중 분류 0-9(10개</span>\n<span class=\"token comment\"># 은닉 1층 50개 뉴런 / 2층 100 개 뉴런</span>\n<span class=\"token comment\"># 50 과 100 은 임의의 값</span>\n<span class=\"token keyword\">import</span> pickle\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">get_data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">(</span>x_train<span class=\"token punctuation\">,</span> t_train<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>x_test<span class=\"token punctuation\">,</span> t_test<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> load_mnist<span class=\"token punctuation\">(</span>flatten<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> normalize<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> x_test<span class=\"token punctuation\">,</span>t_test\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">init_network</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sample_weight.pkl\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">'rb'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n        network <span class=\"token operator\">=</span> pickle<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> network\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">predict</span><span class=\"token punctuation\">(</span>network<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    W1<span class=\"token punctuation\">,</span>W2<span class=\"token punctuation\">,</span>W3 <span class=\"token operator\">=</span> network<span class=\"token punctuation\">[</span><span class=\"token string\">'W1'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> network<span class=\"token punctuation\">[</span><span class=\"token string\">'W2'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>network<span class=\"token punctuation\">[</span><span class=\"token string\">'W3'</span><span class=\"token punctuation\">]</span>\n    b1<span class=\"token punctuation\">,</span>b2<span class=\"token punctuation\">,</span>b3 <span class=\"token operator\">=</span> network<span class=\"token punctuation\">[</span><span class=\"token string\">'b1'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>network<span class=\"token punctuation\">[</span><span class=\"token string\">'b2'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>network<span class=\"token punctuation\">[</span><span class=\"token string\">'b3'</span><span class=\"token punctuation\">]</span>\n\n    a1 <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>dot<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>W1<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>b1\n    z1 <span class=\"token operator\">=</span> sigmoid<span class=\"token punctuation\">(</span>a1<span class=\"token punctuation\">)</span>\n    a2 <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>dot<span class=\"token punctuation\">(</span>z1<span class=\"token punctuation\">,</span>W2<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>b2\n    z2 <span class=\"token operator\">=</span> sigmoid<span class=\"token punctuation\">(</span>a2<span class=\"token punctuation\">)</span>\n    a3 <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>dot<span class=\"token punctuation\">(</span>z2<span class=\"token punctuation\">,</span>W3<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>b3\n    y <span class=\"token operator\">=</span> softmax<span class=\"token punctuation\">(</span>a3<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a1.shape'</span><span class=\"token punctuation\">,</span> a1<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'z1.shape'</span><span class=\"token punctuation\">,</span> z1<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a2.shape'</span><span class=\"token punctuation\">,</span> a2<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'z2.shape'</span><span class=\"token punctuation\">,</span> z2<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a3.shape'</span><span class=\"token punctuation\">,</span> a3<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'y.shape'</span><span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> y\n\nx<span class=\"token punctuation\">,</span> t <span class=\"token operator\">=</span> get_data<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nnetwork <span class=\"token operator\">=</span> init_network<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\nbatch_size <span class=\"token operator\">=</span> <span class=\"token number\">100</span>\naccuracy_cnt <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> batch_size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    x_batch <span class=\"token operator\">=</span> x<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">:</span>i<span class=\"token operator\">+</span>batch_size<span class=\"token punctuation\">]</span>\n    y_batch <span class=\"token operator\">=</span> predict<span class=\"token punctuation\">(</span>network<span class=\"token punctuation\">,</span> x_batch<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">#y = predict(network, x[i])</span>\n    p <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>argmax<span class=\"token punctuation\">(</span>y_batch<span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    accuracy_cnt<span class=\"token operator\">+=</span> np<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>p <span class=\"token operator\">==</span> t<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">:</span>i<span class=\"token operator\">+</span>batch_size<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Accuracy: \"</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span>accuracy_cnt<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>","frontmatter":{"title":"[python]deep-learning-3","date":"January 28, 2020","description":"deep-learning"}},"previous":{"fields":{"slug":"/deep-learning-from-scratch/index2/"},"frontmatter":{"title":"[python]deep-learning-2"}},"next":{"fields":{"slug":"/deep-learning-from-scratch/index1/"},"frontmatter":{"title":"[python]deep-learning-1"}}},"pageContext":{"id":"e7752ba2-015e-53db-9639-182cd9ec4080","previousPostId":"e04f37d8-3396-58c2-86b2-9e9ad321711c","nextPostId":"321572c1-8ed6-59b8-91a9-3ac422394cd6"}},"staticQueryHashes":["2841359383"]}