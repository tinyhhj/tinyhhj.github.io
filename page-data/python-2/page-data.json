{"componentChunkName":"component---src-templates-blog-post-js","path":"/python-2/","result":{"data":{"site":{"siteMetadata":{"title":"tinyhhj Blog"}},"markdownRemark":{"id":"b6405322-92f8-5658-9870-ae0a67ffb63f","excerpt":"patchmatch 위 논문을 대략적으로 훑어봤지만, 무슨 내용인지…","html":"<h2><a href=\"https://gfx.cs.princeton.edu/pubs/Barnes_2009_PAR/\">patchmatch</a></h2>\n<p>위 논문을 대략적으로 훑어봤지만, 무슨 내용인지 1도 이해가 안됐다. 아무래도 논문에 아직 익숙하지 않고, 영어 독해능력이 미숙하고, 이미지 처리 분야에 낯설기 때문이라 생각된다. 이 논문에서는 소스코드를 공개하였는데, 간단한 코어 함수의 소스코드를 보니까, 논문을 읽었을 때보다 훨씬 쉽게 이해가 됐다.<br>\n속도 향상을 위해서 랜덤적 요소를 도입한 부분도 인상적이었다.</p>\n<h3>흐름</h3>\n<ol>\n<li>각 소스 패치와 타겟 패치의 매핑을 랜덤으로 정한다.</li>\n<li>소스패치 주변을 탐색하면서 더 나은 타겟 매핑이 있다면 이동한다.</li>\n<li>지금까지 찾은 최선점에서 다시 한번 랜덤으로 해당 구역내에서 더 나은 매핑을 찾는다.</li>\n<li>2와3을 여러번 반복한다.</li>\n</ol>\n<h3>구현 문제점</h3>\n<ul>\n<li>깔끔하고 이해하기 쉬운 알고리즘임에도 불구하고, 구현 중 디버깅의 어려움.</li>\n<li>동작에 대한 확신이 없음(동작을 제대로 하는듯 싶으나 이게 맞는지 모름)</li>\n<li>속도가 너무 느림</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> PIL <span class=\"token keyword\">import</span> Image\n<span class=\"token keyword\">import</span> random\n<span class=\"token keyword\">import</span> sys\n\nsize<span class=\"token operator\">=</span><span class=\"token number\">7</span>\n<span class=\"token builtin\">iter</span><span class=\"token operator\">=</span><span class=\"token number\">5</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Node</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n        self<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n        self<span class=\"token punctuation\">.</span>dist <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">setDist</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>pos<span class=\"token punctuation\">,</span>dist<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> pos<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n        self<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> pos<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n        self<span class=\"token punctuation\">.</span>dist <span class=\"token operator\">=</span> dist\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">getL2Norm</span><span class=\"token punctuation\">(</span>p1<span class=\"token punctuation\">,</span>p2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>p1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-</span>p2<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">**</span><span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>p1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-</span>p2<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">**</span><span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>p1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-</span>p2<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">**</span><span class=\"token number\">2</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">dist</span><span class=\"token punctuation\">(</span>img1<span class=\"token punctuation\">,</span>img2<span class=\"token punctuation\">,</span>p1<span class=\"token punctuation\">,</span>p2<span class=\"token punctuation\">,</span>sat <span class=\"token operator\">=</span> sys<span class=\"token punctuation\">.</span>maxsize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    ans <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            ans <span class=\"token operator\">+=</span> getL2Norm<span class=\"token punctuation\">(</span>img1<span class=\"token punctuation\">.</span>getpixel<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>p1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>j<span class=\"token punctuation\">,</span>p1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> img2<span class=\"token punctuation\">.</span>getpixel<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>p2<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>j<span class=\"token punctuation\">,</span> p2<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> ans <span class=\"token operator\">>=</span> sat<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> sat\n    <span class=\"token keyword\">return</span> ans\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">unsigned</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> i <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xffffffffffffffff</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">patchmatch</span><span class=\"token punctuation\">(</span>img1<span class=\"token punctuation\">,</span>img2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    _width<span class=\"token punctuation\">,</span> _height <span class=\"token operator\">=</span> img1<span class=\"token punctuation\">.</span>size\n    __width<span class=\"token punctuation\">,</span> __height <span class=\"token operator\">=</span> img2<span class=\"token punctuation\">.</span>size\n    target <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span>Node<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>_width<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>_height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>_height<span class=\"token operator\">-</span>size<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>_width<span class=\"token operator\">-</span>size<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            x <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>randrange<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>__width<span class=\"token operator\">-</span>size<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n            y <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>randrange<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>__height<span class=\"token operator\">-</span>size<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n            target<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>setDist<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">,</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> dist<span class=\"token punctuation\">(</span>img1<span class=\"token punctuation\">,</span>img2<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">,</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"random initialization finish\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># iter만큼 반복한다.</span>\n    <span class=\"token keyword\">for</span> it <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">iter</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># 방향을 왼>오,위>아래 or 반대</span>\n        xst<span class=\"token punctuation\">,</span>xend<span class=\"token punctuation\">,</span>xd <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>_width<span class=\"token operator\">-</span>size<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span>\n        yst<span class=\"token punctuation\">,</span>yend<span class=\"token punctuation\">,</span>yd <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>_height<span class=\"token operator\">-</span>size<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span>\n        <span class=\"token keyword\">if</span> it <span class=\"token operator\">%</span><span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n            xst<span class=\"token punctuation\">,</span> xend<span class=\"token punctuation\">,</span>xd <span class=\"token operator\">=</span> _width<span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span>\n            yst<span class=\"token punctuation\">,</span> yend<span class=\"token punctuation\">,</span>yd <span class=\"token operator\">=</span> _height<span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span>\n        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>yst<span class=\"token punctuation\">,</span>yend<span class=\"token punctuation\">,</span>yd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>xst<span class=\"token punctuation\">,</span>xend<span class=\"token punctuation\">,</span>xd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                <span class=\"token comment\"># 최선의 매핑지점 in img2</span>\n                bestY <span class=\"token operator\">=</span> target<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>y\n                bestX <span class=\"token operator\">=</span> target<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x\n                bestDist <span class=\"token operator\">=</span> target<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>dist\n\n                <span class=\"token comment\"># x축 이전단계와 비교하여 더 비슷한 매핑을 따른다</span>\n                <span class=\"token comment\"># j-xd = j == 0 일때 -1이 되야함</span>\n                <span class=\"token comment\"># j == _width-size+1+x 이 -1 x = -_width+size-2</span>\n                <span class=\"token comment\"># j-xd = _width-size + 1 = -1</span>\n                <span class=\"token keyword\">if</span>  unsigned<span class=\"token punctuation\">(</span>j<span class=\"token operator\">-</span>xd<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> unsigned<span class=\"token punctuation\">(</span>_width<span class=\"token operator\">-</span>size<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                    compareY <span class=\"token operator\">=</span> target<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token operator\">-</span>xd<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>y\n                    compareX <span class=\"token operator\">=</span> target<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j <span class=\"token operator\">-</span> xd<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x <span class=\"token operator\">+</span> xd\n                    <span class=\"token keyword\">if</span> unsigned<span class=\"token punctuation\">(</span>compareX<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> unsigned<span class=\"token punctuation\">(</span>__width<span class=\"token operator\">-</span>size<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                        compareDist <span class=\"token operator\">=</span> dist<span class=\"token punctuation\">(</span>img1<span class=\"token punctuation\">,</span> img2<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>compareY<span class=\"token punctuation\">,</span> compareX<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> bestDist<span class=\"token punctuation\">)</span>\n                        <span class=\"token keyword\">if</span> bestDist <span class=\"token operator\">></span> compareDist<span class=\"token punctuation\">:</span>\n                            bestY <span class=\"token operator\">=</span> compareY\n                            bestX <span class=\"token operator\">=</span> compareX\n                            bestDist <span class=\"token operator\">=</span> compareDist\n\n                <span class=\"token comment\"># y축 이전단계와 비교</span>\n                <span class=\"token keyword\">if</span> unsigned<span class=\"token punctuation\">(</span>i<span class=\"token operator\">-</span>yd<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> unsigned<span class=\"token punctuation\">(</span>_height<span class=\"token operator\">-</span>size<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                    compareY <span class=\"token operator\">=</span> target<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span>yd<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>y<span class=\"token operator\">+</span>yd\n                    compareX <span class=\"token operator\">=</span> target<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span>yd<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x\n                    <span class=\"token keyword\">if</span> unsigned<span class=\"token punctuation\">(</span>compareY<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> unsigned<span class=\"token punctuation\">(</span>__height<span class=\"token operator\">-</span>size<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                        compareDist <span class=\"token operator\">=</span> dist<span class=\"token punctuation\">(</span>img1<span class=\"token punctuation\">,</span>img2<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>compareY<span class=\"token punctuation\">,</span>compareX<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>bestDist<span class=\"token punctuation\">)</span>\n                        <span class=\"token keyword\">if</span> bestDist <span class=\"token operator\">></span> compareDist<span class=\"token punctuation\">:</span>\n                            bestY <span class=\"token operator\">=</span> compareY\n                            bestX <span class=\"token operator\">=</span> compareX\n                            bestDist <span class=\"token operator\">=</span> compareDist\n\n                <span class=\"token comment\"># best guess 주변에서 탐색</span>\n                r <span class=\"token operator\">=</span> <span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>__width<span class=\"token punctuation\">,</span>__height<span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">while</span> r <span class=\"token operator\">>=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n                    <span class=\"token comment\">#print(\"r is %d\"%r)</span>\n                    xmin <span class=\"token operator\">=</span> <span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>bestX <span class=\"token operator\">-</span> r<span class=\"token punctuation\">)</span>\n                    xmax <span class=\"token operator\">=</span> <span class=\"token builtin\">min</span><span class=\"token punctuation\">(</span>bestX<span class=\"token operator\">+</span>r<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> __width<span class=\"token operator\">-</span>size<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n                    ymin <span class=\"token operator\">=</span> <span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> bestY <span class=\"token operator\">-</span> r<span class=\"token punctuation\">)</span>\n                    ymax <span class=\"token operator\">=</span> <span class=\"token builtin\">min</span><span class=\"token punctuation\">(</span>bestY<span class=\"token operator\">+</span>r<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> __height<span class=\"token operator\">-</span>size<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n                    xp <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>randrange<span class=\"token punctuation\">(</span>xmin<span class=\"token punctuation\">,</span>xmax<span class=\"token punctuation\">)</span>\n                    yp <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>randrange<span class=\"token punctuation\">(</span>ymin<span class=\"token punctuation\">,</span>ymax<span class=\"token punctuation\">)</span>\n                    compareDist <span class=\"token operator\">=</span> dist<span class=\"token punctuation\">(</span>img1<span class=\"token punctuation\">,</span>img2<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>yp<span class=\"token punctuation\">,</span>xp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>bestDist<span class=\"token punctuation\">)</span>\n                    <span class=\"token keyword\">if</span> bestDist <span class=\"token operator\">></span> compareDist<span class=\"token punctuation\">:</span>\n                        bestY <span class=\"token operator\">=</span> yp\n                        bestX <span class=\"token operator\">=</span> xp\n                        bestDist <span class=\"token operator\">=</span> compareDist\n                    r <span class=\"token operator\">=</span> r<span class=\"token operator\">//</span><span class=\"token number\">2</span>\n                target<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>setDist<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>bestY<span class=\"token punctuation\">,</span> bestX<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>bestDist<span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">#print(\"iter: %d\"%it)</span>\n\n    <span class=\"token keyword\">return</span> target<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n    img1 <span class=\"token operator\">=</span> Image<span class=\"token punctuation\">.</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a.png'</span><span class=\"token punctuation\">)</span>\n    img2 <span class=\"token operator\">=</span> Image<span class=\"token punctuation\">.</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'b.png'</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># img1.show()</span>\n    <span class=\"token comment\"># img2.show()</span>\n    img3 <span class=\"token operator\">=</span> patchmatch<span class=\"token punctuation\">(</span>img2<span class=\"token punctuation\">,</span>img1<span class=\"token punctuation\">)</span>\n    img4 <span class=\"token operator\">=</span> Image<span class=\"token punctuation\">.</span>new<span class=\"token punctuation\">(</span><span class=\"token string\">'RGB'</span><span class=\"token punctuation\">,</span>img2<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># (200,0,380,200)</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>img2<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>img2<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d %d mapping %d %d\"</span><span class=\"token operator\">%</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">,</span>img3<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span>img3<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            img4<span class=\"token punctuation\">.</span>putpixel<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">,</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>img1<span class=\"token punctuation\">.</span>getpixel<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>img3<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> img3<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    img4<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span><span class=\"token string\">'c.png'</span><span class=\"token punctuation\">)</span></code></pre></div>","frontmatter":{"title":"[python]patchmatch","date":"January 19, 2020","description":"language"}},"previous":{"fields":{"slug":"/gcj2019-r1a1/"},"frontmatter":{"title":"[gcj2019-r1a1]Pylons"}},"next":{"fields":{"slug":"/python-1/"},"frontmatter":{"title":"[python]연습"}}},"pageContext":{"id":"b6405322-92f8-5658-9870-ae0a67ffb63f","previousPostId":"791ffe72-bccc-5cef-9757-8d14ed547110","nextPostId":"079c1cae-e0d0-577a-b045-7a1932b25585"}},"staticQueryHashes":["2841359383"]}