{"componentChunkName":"component---src-templates-blog-post-js","path":"/fe/stacking-context/","result":{"data":{"site":{"siteMetadata":{"title":"tinyhhj Blog"}},"markdownRemark":{"id":"ca22e2e9-01f4-5f4b-aa29-7b982e7a26ac","excerpt":"stacking context 화면에서 Element를 보여줄 때, Element간에 z축으로 layout을 정하는…","html":"<h2>stacking context</h2>\n<p>화면에서 Element를 보여줄 때, Element간에 z축으로 layout을 정하는 3차원 개념이다.<br>\n도통 개념을 이해하지 못하고 있다가 오늘에서야 확실히 이해가 된듯싶다!\\</p>\n<p>쌓임맥락이 새로 생성되는 이유는 많지만 가장 많이 볼 수 있는 조건 중 하나는 position이 absolute거나 relative이면서 z-index가 auto가 아닌 요소이다.<br>\n이 쌓임맥락이 중요한 이유는 쌓임맥락 내에서만 z-index가 유효하기 때문이다. 즉 부모의 쌓임맥락 내에서는 z-index를 기준으로 요소끼리 z축으로 layout되지만,\n부모의 부모 즉 조상요소의 쌓임맥락에서는 부모의 쌓임맥락으로 추상화되어 함께 움직인다.</p>\n<p>트리의 경우로 비유하자만 dfs 순회를 하듯이 먼저 가장 leaf의 쌓임맥락을 계산을 한 뒤, 부모레벨에서는 부모의 쌓임맥락 값으로 함께 z축으로 이동한다.(즉 자식의 z-index값이 1000, 10000이건 관계없이, 부모의 z-index가 2라면, 부모레벨에서 z-index를 계산할때 2로 계산되어 형제요소(z-index 3)의 아래에 위치하게 된다.)</p>\n<p>즉 3줄요약하자면</p>\n<ol>\n<li>z-index는 부모 쌓임맥락에서만 z축으로 layout하는데 기능한다.</li>\n<li>부모레벨로 한단계 올라갔을경우, 부모의 z-index 레벨로 함께 layout되어 움직인다.</li>\n<li>즉 1요소가 2요소에의해 가려지는것을 방지하고 싶다면, 1과 2 요소의 공통조상에서 1요소 부모를 2요소 부모보다 z-index값을 높게주면 된다.</li>\n</ol>\n<style>\n.root {\n    width: 200px;\n    height: 200px;\n    position: relative;\n    padding:10px;\n    border: 1px solid;\n}\n.stacking-context-1 {\n    position: relative;\n    z-index:1;\n    height: 50px;\n}\n.stacking-context-2 {\n    position: absolute;\n    top:25px;\n    left:25px;\n    height:50px;\n}\n.child {\n    width: 50px;\n    height: 50px;\n}\n.stacking-context-1 .child {\n    background: orange;\n}\n.stacking-context-2 .child {\n    background: blue;\n    z-index: 100000;\n}\n.front {\n    z-index: 100;\n}\nbutton {\n    margin-top: 30px;\n}\n\n</style>\n<div class=\"root\">\n    <div class=\"stacking-context-1\">\n        <div class=\"child\">\n            child1\n        </div>\n    </div>\n    <div class=\"stacking-context-2\">\n        <div class=\"child\">\n            child2\n        </div>\n    </div>\n    <button onclick=\"toggle();\">위로올리기</button>\n</div>\n<script>\n    function toggle() {\n        e=document.querySelector('.stacking-context-2');\n        e.classList.toggle('front');\n    }\n</script>","frontmatter":{"title":"[css]stacking-context","date":"April 20, 2021","description":"javascript"}},"previous":{"fields":{"slug":"/spring/mvc/"},"frontmatter":{"title":"[springboot] mvc"}},"next":{"fields":{"slug":"/books/cleancode/3장/"},"frontmatter":{"title":"[cleancode]3장 함수"}}},"pageContext":{"id":"ca22e2e9-01f4-5f4b-aa29-7b982e7a26ac","previousPostId":"268c194b-8eeb-5859-a643-d5ca888a425b","nextPostId":"93f4a6f2-9491-5c8f-a6f0-aecc49e4092a"}},"staticQueryHashes":["2841359383"]}