{"componentChunkName":"component---src-templates-blog-post-js","path":"/algospot-tsp1/","result":{"data":{"site":{"siteMetadata":{"title":"Gatsby Starter Blog"}},"markdownRemark":{"id":"65c931cd-2320-5d60-be36-30a264e01511","excerpt":"TSP1 재귀 호출","html":"<h1>TSP1</h1>\n<h2>재귀 호출</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">package algospot.tsp1;\n\nimport java.io.FileInputStream;\nimport java.io.FileNotFoundException;\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) throws FileNotFoundException {\n        Scanner sc = new Scanner(new FileInputStream(&quot;algospot/tsp1/input.txt&quot;));\n        int tc = sc.nextInt();\n        for( int i = 0; i &lt; tc; i++) {\n            int cities = sc.nextInt();\n            double[][] map = new double[cities][cities];\n\n            for( int j = 0 ; j &lt; cities*cities;j++) {\n                int y = j / cities;\n                int x = j % cities;\n                map[y][x] = sc.nextDouble();\n            }\n            double res = Double.MAX_VALUE;\n            for( int k = 0 ; k &lt; cities; k++) {\n                boolean[] visits = new boolean[cities];\n                visits[k] = true;\n                res = Math.min(res,traverse(map, visits, k));\n            }\n            System.out.println(res);\n\n        }\n\n    }\n\n    // input: 도시간 거리 정보 double[][], 방문여부 boolean[], 시작점 int\n    // output: 최소 여행 길이\n    public static double traverse(double[][] map, boolean[] visits, int st) {\n\n        int next = -1;\n        for( int i = 0;  i &lt; visits.length ; i++) {\n            if( !visits[i]) {\n                next = i;\n                break;\n            }\n        }\n        // 모두 방문했다면\n        if( next == -1) {\n            return 0;\n        }\n        double minDist = Double.MAX_VALUE;\n        for(int i = 0 ; i &lt; visits.length; i++) {\n            if(!visits[i]) {\n                visits[i]= true;\n                double dist = map[st][i] + traverse(map,visits,i);\n                visits[i]= false;\n                if( dist &lt; minDist) {\n                    minDist = dist;\n                }\n            }\n        }\n        return minDist;\n    }\n}</code></pre></div>","frontmatter":{"title":"[algospot]tsp1","date":"January 06, 2020","description":"algorithm"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/algospot-tsp1/","previous":{"fields":{"slug":"/algospot-boardcover/"},"frontmatter":{"title":"[algospot]boardcover"}},"next":{"fields":{"slug":"/gcj2019-qr1/"},"frontmatter":{"title":"[gcj2019-qr1]Foregone Solution"}}}}}