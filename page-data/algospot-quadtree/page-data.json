{"componentChunkName":"component---src-templates-blog-post-js","path":"/algospot-quadtree/","result":{"data":{"site":{"siteMetadata":{"title":"Gatsby Starter Blog"}},"markdownRemark":{"id":"856728aa-92d7-5426-853c-318a4d5a5321","excerpt":"QUADTREE 분할정복 분할정복 문제이므로 분할정복 문제를 푸는 solution 함수 input / output 정의 input: 압축 string output: 거꾸로 압축된 string 분할정복을 푸는 solution 함수를 적용할 수 있게끔 문제를 분할한다.  크기가 작은…","html":"<h2><a href=\"https://algospot.com/judge/problem/read/QUADTREE\">QUADTREE</a></h2>\n<h3>분할정복</h3>\n<ol>\n<li>\n<p>분할정복 문제이므로 분할정복 문제를 푸는 solution 함수 input / output 정의</p>\n<ol>\n<li>input: 압축 string</li>\n<li>output: 거꾸로 압축된 string</li>\n</ol>\n</li>\n<li>\n<p>분할정복을 푸는 solution 함수를 적용할 수 있게끔 문제를 분할한다. </p>\n<ol>\n<li>크기가 작은 4개의 작은 문제로 쪼개기 가능 (분할)</li>\n<li>작은 문제가 모두 같은 색일경우 더 이상 쪼갤 수 없다. (기저조건)</li>\n<li>기존의 문제를 뒤집는 문제이기 때문에 3412순으로 다시 재배열한다. (병합)</li>\n</ol>\n</li>\n</ol>\n<h3>회고</h3>\n<ol>\n<li>작은 문제로 쪼갤 수 있다면 일단 문제 함수 정의를 잘 정한뒤, 분할 정복을 이용한다.</li>\n<li>분할, 병합, 기저조건을 잊지말자</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># solution\n# input : 압축된 string\n# output: 거꾸로 뒤집은 압축된 string\n\ndef solution(string):\n    # 기저조건\n    # 하나의 색인경우\n    # w,b인경우\n    if(string[0] != &#39;x&#39;):\n        return string[0]\n\n    # x로 시작하는 경우에는 어떻게 나눌것인가?\n    first = solution(string[1:])\n    second = solution(string[1+len(first):])\n    third = solution(string[1+len(first)+ len(second):])\n    fourth = solution(string[1+len(first)+len(second) + len(third):])\n    return &#39;x&#39;+third + fourth + first + second\n\n\nif __name__ == &#39;__main__&#39;:\n    tc = input()\n    for i in range(int(tc)):\n        string = input()\n        print(solution(string))</code></pre></div>","frontmatter":{"title":"[algospot]quadtree","date":"January 20, 2020","description":"algorithm"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/algospot-quadtree/","previous":{"fields":{"slug":"/python-1/"},"frontmatter":{"title":"[python]연습"}},"next":null}}}