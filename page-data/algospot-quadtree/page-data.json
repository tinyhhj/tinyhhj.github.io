{"componentChunkName":"component---src-templates-blog-post-js","path":"/algospot-quadtree/","result":{"data":{"site":{"siteMetadata":{"title":"tinyhhj Blog"}},"markdownRemark":{"id":"66ec2c03-8412-531f-b2d0-16839bb707fb","excerpt":"QUADTREE 분할정복 분할정복 문제이므로 분할정복 문제를 푸는 solution 함수 input / output 정의 input: 압축 string output: 거꾸로 압축된 string 분할정복을 푸는 solution 함수를 적용할 수 있게끔 문제를 분할한다. 크기가 작은…","html":"<h2><a href=\"https://algospot.com/judge/problem/read/QUADTREE\">QUADTREE</a></h2>\n<h3>분할정복</h3>\n<ol>\n<li>\n<p>분할정복 문제이므로 분할정복 문제를 푸는 solution 함수 input / output 정의</p>\n<ol>\n<li>input: 압축 string</li>\n<li>output: 거꾸로 압축된 string</li>\n</ol>\n</li>\n<li>\n<p>분할정복을 푸는 solution 함수를 적용할 수 있게끔 문제를 분할한다.</p>\n<ol>\n<li>크기가 작은 4개의 작은 문제로 쪼개기 가능 (분할)</li>\n<li>작은 문제가 모두 같은 색일경우 더 이상 쪼갤 수 없다. (기저조건)</li>\n<li>기존의 문제를 뒤집는 문제이기 때문에 3412순으로 다시 재배열한다. (병합)</li>\n</ol>\n</li>\n</ol>\n<h3>회고</h3>\n<ol>\n<li>작은 문제로 쪼갤 수 있다면 일단 문제 함수 정의를 잘 정한뒤, 분할 정복을 이용한다.</li>\n<li>분할, 병합, 기저조건을 잊지말자</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># solution</span>\n<span class=\"token comment\"># input : 압축된 string</span>\n<span class=\"token comment\"># output: 거꾸로 뒤집은 압축된 string</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># 기저조건</span>\n    <span class=\"token comment\"># 하나의 색인경우</span>\n    <span class=\"token comment\"># w,b인경우</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token string\">'x'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> string<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token comment\"># x로 시작하는 경우에는 어떻게 나눌것인가?</span>\n    first <span class=\"token operator\">=</span> solution<span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    second <span class=\"token operator\">=</span> solution<span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token operator\">+</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>first<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    third <span class=\"token operator\">=</span> solution<span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token operator\">+</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>first<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>second<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    fourth <span class=\"token operator\">=</span> solution<span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token operator\">+</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>first<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>second<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>third<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'x'</span><span class=\"token operator\">+</span>third <span class=\"token operator\">+</span> fourth <span class=\"token operator\">+</span> first <span class=\"token operator\">+</span> second\n\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n    tc <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>tc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        string <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>solution<span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>","frontmatter":{"title":"[algospot]quadtree","date":"January 20, 2020","description":"algorithm"}},"previous":{"fields":{"slug":"/python-1/"},"frontmatter":{"title":"[python]연습"}},"next":{"fields":{"slug":"/deep-learning-from-scratch/index2/"},"frontmatter":{"title":"[python]deep-learning-2"}}},"pageContext":{"id":"66ec2c03-8412-531f-b2d0-16839bb707fb","previousPostId":"079c1cae-e0d0-577a-b045-7a1932b25585","nextPostId":"e04f37d8-3396-58c2-86b2-9e9ad321711c"}},"staticQueryHashes":["2841359383"]}