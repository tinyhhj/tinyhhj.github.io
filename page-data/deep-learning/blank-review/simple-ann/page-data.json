{"componentChunkName":"component---src-templates-blog-post-js","path":"/deep-learning/blank-review/simple-ann/","result":{"data":{"site":{"siteMetadata":{"title":"tinyhhj Blog"}},"markdownRemark":{"id":"9bd762c6-26e5-5908-ac7f-ae629d488918","excerpt":"Simple-ann 이 내용은 펭귄브로의 3분 딥러닝, 파이토치맛의 3장 내용을 복습한 예제입니다. 문제 정답이 0과 1인 데이터 구분하기","html":"<h2>Simple-ann</h2>\n<p>이 내용은 <a href=\"http://www.hanbit.co.kr/store/books/look.php?p_code=B7193109877\">펭귄브로의 3분 딥러닝, 파이토치맛</a>의 3장 내용을 복습한 예제입니다.</p>\n<h3>문제</h3>\n<ol>\n<li>정답이 0과 1인 데이터 구분하기</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> torch\n<span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n<span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>datasets <span class=\"token keyword\">import</span> make_blobs\n<span class=\"token keyword\">import</span> matplotlib<span class=\"token punctuation\">.</span>pyplot <span class=\"token keyword\">as</span> plt\n<span class=\"token keyword\">import</span> torch<span class=\"token punctuation\">.</span>nn<span class=\"token punctuation\">.</span>functional <span class=\"token keyword\">as</span> F\n<span class=\"token keyword\">import</span> os\n\n\n<span class=\"token comment\"># label이 0,1로 된 데이터를 구분하는 ann</span>\n<span class=\"token comment\"># 1. 데이터 만들기</span>\n<span class=\"token comment\"># 2. 학습하기</span>\n<span class=\"token comment\"># 3. 가중치 업데이트</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">make_datasets</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    train_x<span class=\"token punctuation\">,</span> train_y <span class=\"token operator\">=</span> make_blobs<span class=\"token punctuation\">(</span><span class=\"token number\">80</span><span class=\"token punctuation\">,</span>centers<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> cluster_std<span class=\"token operator\">=</span><span class=\"token number\">0.3</span><span class=\"token punctuation\">)</span>\n    test_x <span class=\"token punctuation\">,</span> test_y <span class=\"token operator\">=</span> make_blobs<span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> centers<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>cluster_std<span class=\"token operator\">=</span><span class=\"token number\">0.3</span><span class=\"token punctuation\">)</span>\n    train_y <span class=\"token operator\">=</span> label_change<span class=\"token punctuation\">(</span>train_y<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    train_y <span class=\"token operator\">=</span> label_change<span class=\"token punctuation\">(</span>train_y<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    test_y <span class=\"token operator\">=</span> label_change<span class=\"token punctuation\">(</span>test_y<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    test_y <span class=\"token operator\">=</span> label_change<span class=\"token punctuation\">(</span>test_y<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> torch<span class=\"token punctuation\">.</span>from_numpy<span class=\"token punctuation\">(</span>train_x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>torch<span class=\"token punctuation\">.</span>float32<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> \\\n           torch<span class=\"token punctuation\">.</span>from_numpy<span class=\"token punctuation\">(</span>train_y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>torch<span class=\"token punctuation\">.</span>float32<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\\\n           torch<span class=\"token punctuation\">.</span>from_numpy<span class=\"token punctuation\">(</span>test_x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>torch<span class=\"token punctuation\">.</span>float32<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\\\n           torch<span class=\"token punctuation\">.</span>from_numpy<span class=\"token punctuation\">(</span>test_y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>torch<span class=\"token punctuation\">.</span>float32<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">label_change</span><span class=\"token punctuation\">(</span>labels<span class=\"token punctuation\">,</span> f<span class=\"token punctuation\">,</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    new_labels <span class=\"token operator\">=</span> labels<span class=\"token punctuation\">.</span>copy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> f<span class=\"token punctuation\">:</span>\n        new_labels<span class=\"token punctuation\">[</span>labels <span class=\"token operator\">==</span> x<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> t\n    <span class=\"token keyword\">return</span> new_labels\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">show</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    plt<span class=\"token punctuation\">.</span>figure<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>xx<span class=\"token punctuation\">,</span>yy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>label <span class=\"token keyword\">in</span> <span class=\"token builtin\">zip</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        plt<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>xx<span class=\"token punctuation\">,</span>yy<span class=\"token punctuation\">,</span><span class=\"token string\">'ro'</span> <span class=\"token keyword\">if</span> label <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token keyword\">else</span> <span class=\"token string\">'r+'</span><span class=\"token punctuation\">)</span>\n    plt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token builtin\">iter</span> <span class=\"token operator\">=</span> <span class=\"token number\">2000</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ANN</span><span class=\"token punctuation\">(</span>torch<span class=\"token punctuation\">.</span>nn<span class=\"token punctuation\">.</span>Module<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> input_size<span class=\"token punctuation\">,</span> hidden_size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>ANN<span class=\"token punctuation\">,</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>linear1 <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>nn<span class=\"token punctuation\">.</span>Linear<span class=\"token punctuation\">(</span>input_size<span class=\"token punctuation\">,</span>hidden_size<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>relu <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>nn<span class=\"token punctuation\">.</span>ReLU<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>linear2 <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>nn<span class=\"token punctuation\">.</span>Linear<span class=\"token punctuation\">(</span>hidden_size<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>sigmoid <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>nn<span class=\"token punctuation\">.</span>Sigmoid<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">forward</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        x <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>linear1<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\n        x <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>relu<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\n        x <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>linear2<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>sigmoid<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\ntrain_x <span class=\"token punctuation\">,</span> train_y<span class=\"token punctuation\">,</span> test_x<span class=\"token punctuation\">,</span> test_y <span class=\"token operator\">=</span> make_datasets<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nann <span class=\"token operator\">=</span> ANN<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n<span class=\"token builtin\">iter</span> <span class=\"token operator\">=</span> <span class=\"token number\">2000</span>\ncriterion <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>nn<span class=\"token punctuation\">.</span>BCELoss<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nlearnin_rate <span class=\"token operator\">=</span> <span class=\"token number\">0.03</span>\noptimizer <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>optim<span class=\"token punctuation\">.</span>SGD<span class=\"token punctuation\">(</span>ann<span class=\"token punctuation\">.</span>parameters<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> lr<span class=\"token operator\">=</span> learnin_rate<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">if</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>exists<span class=\"token punctuation\">(</span><span class=\"token string\">'ann.pt'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    ann<span class=\"token punctuation\">.</span>load_state_dict<span class=\"token punctuation\">(</span>torch<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span><span class=\"token string\">'ann.pt'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    ann<span class=\"token punctuation\">.</span><span class=\"token builtin\">eval</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    loss <span class=\"token operator\">=</span> criterion<span class=\"token punctuation\">(</span>ann<span class=\"token punctuation\">(</span>test_x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>squeeze<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> test_y<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>loss<span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    exit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">iter</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    ann<span class=\"token punctuation\">.</span>train<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    optimizer<span class=\"token punctuation\">.</span>zero_grad<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    pred_y <span class=\"token operator\">=</span> ann<span class=\"token punctuation\">(</span>train_x<span class=\"token punctuation\">)</span>\n    loss <span class=\"token operator\">=</span> criterion<span class=\"token punctuation\">(</span>pred_y<span class=\"token punctuation\">.</span>squeeze<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>train_y<span class=\"token punctuation\">)</span>\n    loss<span class=\"token punctuation\">.</span>backward<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    optimizer<span class=\"token punctuation\">.</span>step<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> i <span class=\"token operator\">%</span> <span class=\"token number\">100</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'{}:{}'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>loss<span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nann<span class=\"token punctuation\">.</span><span class=\"token builtin\">eval</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nloss <span class=\"token operator\">=</span> criterion<span class=\"token punctuation\">(</span>ann<span class=\"token punctuation\">(</span>test_x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>squeeze<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>test_y<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>loss<span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\ntorch<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span>ann<span class=\"token punctuation\">.</span>state_dict<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'ann.pt'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>ann<span class=\"token punctuation\">.</span>state_dict<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>","frontmatter":{"title":"[deeplearning]simple-ann","date":"February 18, 2020","description":"deep-learning"}},"previous":{"fields":{"slug":"/deep-learning/blank-review/image-recovery/"},"frontmatter":{"title":"[deeplearning]image-recovery"}},"next":{"fields":{"slug":"/deep-learning/batchnorm/"},"frontmatter":{"title":"[deeplearning]batchnorm"}}},"pageContext":{"id":"9bd762c6-26e5-5908-ac7f-ae629d488918","previousPostId":"b2355ada-b148-5b4b-aec4-dd56ac88dca7","nextPostId":"be4d840a-d958-515f-8a0d-f3d2071f3822"}},"staticQueryHashes":["2841359383"]}