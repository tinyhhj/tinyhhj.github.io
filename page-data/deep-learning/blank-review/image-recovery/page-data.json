{"componentChunkName":"component---src-templates-blog-post-js","path":"/deep-learning/blank-review/image-recovery/","result":{"data":{"site":{"siteMetadata":{"title":"tinyhhj Blog"}},"markdownRemark":{"id":"b2355ada-b148-5b4b-aec4-dd56ac88dca7","excerpt":"Image-recovery 이 내용은 펭귄브로의 3분 딥러닝, 파이토치맛의 3장 내용을 복습한 예제입니다. 문제 weired_function을 통해 나온 손상된 이미지를 원래대로 복구할 수 있는 방법? 일반적 접근 weired_function 원리 이해 weired_function…","html":"<h2>Image-recovery</h2>\n<p>이 내용은 <a href=\"http://www.hanbit.co.kr/store/books/look.php?p_code=B7193109877\">펭귄브로의 3분 딥러닝, 파이토치맛</a>의 3장 내용을 복습한 예제입니다.</p>\n<h3>문제</h3>\n<p>weired_function을 통해 나온 손상된 이미지를 원래대로 복구할 수 있는 방법?</p>\n<ol>\n<li>\n<p>일반적 접근</p>\n<ol>\n<li>weired_function 원리 이해</li>\n<li>weired_function를 복구할 수 있는 함수 작성</li>\n<li>이미지 복구</li>\n</ol>\n</li>\n<li>\n<p>머신러닝 접근</p>\n<ol>\n<li>손상된 이미지와 같은 사이즈의 랜덤 이미지를 weired_function에 입력</li>\n<li>1.의 출력된 결과와 손상된 이미지 차이 비교</li>\n<li>손상된 이미지와 같게끔 랜덤 이미지 입력값 조정</li>\n<li>최종적으로 손상된 이미지가 나온 랜덤 이미지를 찾았다면 이미지 복구</li>\n</ol>\n</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> torch\n<span class=\"token keyword\">import</span> pickle\n<span class=\"token keyword\">import</span> matplotlib<span class=\"token punctuation\">.</span>pyplot <span class=\"token keyword\">as</span> plt\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">weird_function</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> n_iter<span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    h <span class=\"token operator\">=</span> x\n    filt <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>tensor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">.</span><span class=\"token operator\">/</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">.</span><span class=\"token operator\">/</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">.</span><span class=\"token operator\">/</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> ii <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n_iter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        zero_tensor <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>tensor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1.0</span><span class=\"token operator\">*</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        h_l <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>cat<span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span>zero_tensor<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n        h_r <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>cat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> zero_tensor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span>\n        h <span class=\"token operator\">=</span> filt<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> h <span class=\"token operator\">+</span> filt<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> h_l <span class=\"token operator\">+</span> filt<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> h_r\n        <span class=\"token keyword\">if</span> ii <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n            h <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>cat<span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">[</span>h<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">//</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>h<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span>h<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">//</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span>  <span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> h\n\n<span class=\"token comment\"># image load</span>\nbroken_image <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>FloatTensor<span class=\"token punctuation\">(</span>pickle<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./broken_image_t.p'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'rb'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>encoding<span class=\"token operator\">=</span><span class=\"token string\">'latin1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># image show</span>\nplt<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span>broken_image<span class=\"token punctuation\">.</span>view<span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\nrandom_image <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>randn<span class=\"token punctuation\">(</span><span class=\"token number\">10000</span><span class=\"token punctuation\">,</span>requires_grad<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\nlearning_rate <span class=\"token operator\">=</span> <span class=\"token number\">0.8</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'learning rate: {}'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>learning_rate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">20000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># auto grad를 아직 잘 이해못한듯..</span>\n\n    random_image<span class=\"token punctuation\">.</span>requires_grad_<span class=\"token punctuation\">(</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># process weired</span>\n    result_image <span class=\"token operator\">=</span> weird_function<span class=\"token punctuation\">(</span>random_image<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># calc loss</span>\n    loss <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>dist<span class=\"token punctuation\">(</span>result_image<span class=\"token punctuation\">,</span>broken_image<span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n    loss<span class=\"token punctuation\">.</span>backward<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># rearrange random image</span>\n    <span class=\"token keyword\">with</span> torch<span class=\"token punctuation\">.</span>no_grad<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        random_image <span class=\"token operator\">=</span> random_image <span class=\"token operator\">-</span> learning_rate <span class=\"token operator\">*</span> random_image<span class=\"token punctuation\">.</span>grad\n\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">%</span> <span class=\"token number\">1000</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'loss: {}'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>loss<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span>random_image<span class=\"token punctuation\">.</span>view<span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>","frontmatter":{"title":"[deeplearning]image-recovery","date":"February 16, 2020","description":"deep-learning"}},"previous":{"fields":{"slug":"/python/star-args/"},"frontmatter":{"title":"[python]star argument"}},"next":{"fields":{"slug":"/deep-learning/blank-review/simple-ann/"},"frontmatter":{"title":"[deeplearning]simple-ann"}}},"pageContext":{"id":"b2355ada-b148-5b4b-aec4-dd56ac88dca7","previousPostId":"70ac93b0-38af-51c6-ab98-7892c8e45700","nextPostId":"9bd762c6-26e5-5908-ac7f-ae629d488918"}},"staticQueryHashes":["2841359383"]}